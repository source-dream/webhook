name: Build and Release

on:
    push:
        tags:
            - "v*" # 触发标签模式 v1.0.0, v2.1.0

jobs:
    build:
        name: Build Go Binary
        runs-on: ubuntu-20.04 # ubuntu-latest

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: Setup Go
              uses: actions/setup-go@v5
              with:
                  go-version: 1.21

            - name: Install Dependencies
              run: go mod download

            # **构建 Linux 静态编译版本**
            - name: Build Linux Static Binary
              run: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o webhook_linux_static main.go

            # **构建 Linux 动态编译版本**
            - name: Build Linux Dynamic Binary
              run: CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -o webhook_linux_dynamic main.go

            # **构建 Windows 64 位版本**
            - name: Build Windows 64-bit Binary
              run: CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o webhook_windows_x64.exe main.go

            - name: Upload Binary Artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: webhook-binaries
                  path: |
                      webhook_linux_static
                      webhook_linux_dynamic
                      webhook_windows_x64.exe

    release:
        needs: build
        runs-on: ubuntu-20.04

        steps:
            - name: Download build artifacts
              uses: actions/download-artifact@v4
              with:
                  name: webhook-binaries

            - name: Create GitHub Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GH_PAT }}
              with:
                  tag_name: ${{ github.ref_name }}
                  release_name: ${{ github.ref_name }}
                  body: "Release for version ${{ github.ref_name }}"
                  draft: false
                  prerelease: false

            - name: Upload Linux Static Binary
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GH_PAT }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: webhook_linux_static
                  asset_name: webhook_linux_static
                  asset_content_type: application/octet-stream

            - name: Upload Linux Dynamic Binary
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GH_PAT }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: webhook_linux_dynamic
                  asset_name: webhook_linux_dynamic
                  asset_content_type: application/octet-stream

            - name: Upload Windows 64-bit Binary
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GH_PAT }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: webhook_windows_x64.exe
                  asset_name: webhook_windows_x64.exe
                  asset_content_type: application/octet-stream
