name: Build and Release

on:
    push:
        tags:
            - "v*" # 触发标签模式 v1.0.0, v2.1.0

jobs:
    build:
        name: Build Go Binary
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: Setup Go
              uses: actions/setup-go@v5
              with:
                  go-version: 1.21

            - name: Install Dependencies
              run: go mod download

            - name: Build Binary (Linux)
              run: go build -o webhook_linux main.go

            - name: Build Binary (Windows)
              run: GOOS=windows GOARCH=amd64 go build -o webhook_x64.exe main.go

            - name: Upload Binary Artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: webhook-binaries
                  path: |
                      webhook_linux
                      webhook_x64.exe

    release:
        needs: build
        runs-on: ubuntu-latest

        steps:
            - name: Download build artifacts
              uses: actions/download-artifact@v4
              with:
                  name: webhook-binaries

            - name: Create GitHub Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref_name }}
                  release_name: ${{ github.ref_name }}
                  body: "Release for version ${{ github.ref_name }}"
                  draft: false
                  prerelease: false

            - name: Upload Linux Binary
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: webhook_linux
                  asset_name: webhook_linux
                  asset_content_type: application/octet-stream

            - name: Upload Windows Binary
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: webhook_x64.exe
                  asset_name: webhook_x64.exe
                  asset_content_type: application/octet-stream
